#!/bin/bash
set -e

function _check_remote_first_run {
    if ! ssh "$target_value" test -f "\$HOME/.config/.dotcube.run"; then
        echo -e ""
        echo -e "${CHECK_MARK} ${CYAN}Initial provisioning - dotcube-remote: Bootstrap complete!${NC}"
        ssh "$target_value" touch "\$HOME/.config/.dotcube.run"
        exit 0
    else
        echo -e ""
        echo -e "${CHECK_MARK} ${CYAN}dotcube-remote: Bootstrap complete!${NC}"
        exit 0
    fi
}

# check if first parameter exists
if [ -z "$1" ]; then
    echo "Usage: dotcube-remote <remote-host> [ansible-playbook-args]"
    echo "[ansible-playbook-args] are passed directly to ansible-playbook"
    echo ""
    echo "Use -t to specify the target role to run"
    echo "Example: dotcube-remote <remote-host> -t zsh"
    exit 1
fi
if [[ $1 == *".yml"* ]]; then
    target="inventory/$1"
    target_type="inventory"
else
    target="$1,"
    target_value="$1"
    target_type="host"
fi

# Copy SSH keys to remote host
if ! ssh -o "BatchMode yes" -o "ConnectTimeout 5" "$1" true; then
    echo "Copying ssh keys to $1 - please enter your password when prompted"
    if [[ "$target_type" == "host" ]]; then
        if [[ " $* " =~ " -u " ]]; then
            username=$(echo "$@" | sed -n -e 's/^.*-u \([^ ]*\).*$/\1/p')
            ssh-copy-id -i "$HOME/.ssh/id_ed25519.pub" "$username@$1"
        else
            ssh-copy-id -i "$HOME/.ssh/id_ed25519.pub" "$1"
        fi
    fi
fi

# account for username passed in as an argument
if [[ "$target_type" == "host" ]]; then
    ssh_target_construct=""
    if [[ " $* " =~ " -u " ]]; then
        username=$(echo "$@" | sed -n -e 's/^.*-u \([^ ]*\).*$/\1/p')
        ssh_target_construct="$username@$1"
    else
        ssh_target_construct="$1"
    fi
fi

# Shift the positional parameters to exclude $1
shift

DOTFILES_HOME="$HOME/.dotcube"
export DOTCUBE_REMOTE_TRIGGER=true
if [[ "$target_type" == "host" ]]; then
    if ssh "$ssh_target_construct" sudo -n true; then
        "$DOTFILES_HOME"/bin/dotcube -i "$target" "$@"
    else
        "$DOTFILES_HOME"/bin/dotcube -i "$target" --ask-become-pass "$@"
    fi
else
    "$DOTFILES_HOME"/bin/dotcube -i "$target" --ask-become-pass "$@"
fi

if [[ " $* " =~ " -t " ]]; then
    tag_used=$(echo "$@" | sed -n -e 's/^.*-t \([^ ]*\).*$/\1/p')
    case "$tag_used" in
        rollback)
            echo -e ""
            echo -e "${CHECK_MARK} ${CYAN}dotcube-remote: Rollback complete!${NC}"
            exit 0
            ;;
        remove)
            echo -e ""
            echo -e "${CHECK_MARK} ${CYAN}dotcube-remote: Remove complete!${NC}"
            exit 0
            ;;
        *)
            _check_remote_first_run
            ;;
    esac
else
    _check_remote_first_run
fi
